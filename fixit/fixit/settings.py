"""
Django settings for fixit project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import datetime
from django.contrib.messages import constants as messages
import os # Added for environment variables

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# For production, load this from an environment variable:
# SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-yqmh163==i&!7b!v)t+(vzl!-=9ovy^70^7$8pw11c7xt*#556')
SECRET_KEY = 'django-insecure-yqmh163==i&!7b!v)t+(vzl!-=9ovy^70^7$8pw11c7xt*#556'

# SECURITY WARNING: don't run with debug turned on in production!
# For production, set this to False and load from an environment variable:
# DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'
DEBUG = True

# ALLOWED_HOSTS should be configured for your domain in production
ALLOWED_HOSTS = []
if DEBUG:
    ALLOWED_HOSTS += ['127.0.0.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'fixit_frw', # Your application
    'rest_framework',
    'corsheaders',
    'crispy_forms',
    'crispy_bootstrap5',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # Ensure this is placed correctly, usually before CommonMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fixit.urls'

CORS_ALLOWED_ORIGINS  = []
# For development, you can allow specific origins or allow all if strictly for local dev
if DEBUG:
    CORS_ALLOWED_ORIGINS += [
        'http://127.0.0.1:5500', # Example for a local frontend dev server
        'http://localhost:5500',
        'http://127.0.0.1:8000', # Your Django dev server
        'http://localhost:8000',
    ]
# For production, list your specific frontend domain(s)
# CORS_ALLOWED_ORIGINS = [
#     "https://yourfrontenddomain.com",
# ]
# Or, if you want to allow all origins (less secure, use with caution):
# CORS_ALLOW_ALL_ORIGINS = True


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"], # Project-level templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fixit.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
# For production, consider loading these from environment variables
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME', 'fixit'),
        'USER': os.environ.get('DB_USER', 'vidky'),
        'PASSWORD': os.environ.get('DB_PASSWORD', 'vickyganteng&&'),
        'HOST': os.environ.get('DB_HOST', 'localhost'),
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us' # Indonesian
TIME_ZONE = 'Asia/Jakarta'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
# STATICFILES_DIRS = [BASE_DIR / "static"] # If you have project-wide static files not in app static dirs

# Media files (User-uploaded content)
MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST framework settings
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES" : [
        "rest_framework.authentication.SessionAuthentication",
        # 'rest_framework.authentication.OAuth2Authentication', # Example, if you use it
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        # "api.authentication.TokenAuthentication" # Ensure 'api.authentication.TokenAuthentication' exists if uncommented
    ],
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    "DEFAULT_PERMISSION_CLASSES" : [
        "rest_framework.permissions.IsAuthenticatedOrReadOnly" # Sensible default
    ]
}

# Simple JWT settings
SIMPLE_JWT = {
    "AUTH_HEADER_TYPES" : ["Bearer"],
    "ACCESS_TOKEN_LIFETIME" : datetime.timedelta(minutes=30), # Consider your security requirements
    "REFRESH_TOKEN_LIFETIME" : datetime.timedelta(days=1) # Refresh tokens usually last longer
}

# Django messages framework tags
MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger', # Aligns with Bootstrap's 'danger' class
}

# Custom User Model
AUTH_USER_MODEL = 'fixit_frw.User'

# Login and Logout redirect URLs (optional, but good practice)
LOGIN_URL = 'login' # Assuming you have a URL pattern named 'login'
LOGOUT_REDIRECT_URL = 'landing_page' # Assuming you have a URL pattern named 'landing_page' or similar
LOGIN_REDIRECT_URL = 'menu_page' # Redirect after successful login
